-
  include: tests/templates/kv.yml, tests/templates/n1ql.yml, tests/templates/rebalance.yml

############# data loading ################
- section_start: data_loading
-
  image: sequoiatools/gideon
  command: "kv --ops {{.Scale 5000}} --create 30 --get 70 --delete 10     --hosts {{.Orchestrator}} --bucket {{.Bucket}}"
-
  command: "kv --ops {{.Scale 2000}} --create 60 --get 40 --sizes 64 96   --hosts {{.Orchestrator}} --bucket {{.NthBucket 1}}"
-
  command: "kv --ops {{.Scale 2000}} --create 60 --get 40 --sizes 64 96   --hosts {{.Orchestrator}} --bucket {{.NthBucket 2}}"
-
  command: "kv --ops {{.Scale 100}} --create 100 --sizes 1024  --hosts {{.Orchestrator}} --bucket {{.NthBucket 3}}"
- section_end: data_loading


###############  create indexes ################
-
   image: sequoiatools/cbq
   command: "-e=http://{{.QueryNodePort}}  -u={{.RestUsername}} -p={{.RestPassword}} -script='create index default_rating on `{{.Bucket}}`(rating)'"
-
   command: "-e=http://{{.QueryNodePort}}  -u={{.RestUsername}} -p={{.RestPassword}} -script='create index default_claims on `{{.Bucket}}`(claim)'"
-
   command: "-e=http://{{.QueryNodePort}}  -u={{.RestUsername}} -p={{.RestPassword}} -script='create index default_result on `{{.Bucket}}`(result)'"
   wait: true
-
   command: "-e=http://{{.QueryNodePort}}  -u={{.RestUsername}} -p={{.RestPassword}} -script='create primary index on `{{.Bucket}}`'"
-
   command: "-e=http://{{.QueryNodePort}}  -u={{.RestUsername}} -p={{.RestPassword}} -script='create index o1_rating on `{{.NthBucket 1}}`(rating)'"
   wait: true
-
   command: "-e=http://{{.QueryNodePort}}  -u={{.RestUsername}} -p={{.RestPassword}} -script='create index o1_claims on `{{.NthBucket 1}}`(claim)'"
-
   command: "-e=http://{{.QueryNodePort}}  -u={{.RestUsername}} -p={{.RestPassword}} -script='create index o1_result on `{{.NthBucket 1}}`(result)'"
-
   command: "-e=http://{{.QueryNodePort}}  -u={{.RestUsername}} -p={{.RestPassword}} -script='create index o2_rating on `{{.NthBucket 2}}`(rating)'"
-
   command: "-e=http://{{.QueryNodePort}}  -u={{.RestUsername}} -p={{.RestPassword}} -script='create index o2_claims on `{{.NthBucket 2}}`(claim)'"
-
   command: "-e=http://{{.QueryNodePort}}  -u={{.RestUsername}} -p={{.RestPassword}} -script='create index o2_result on `{{.NthBucket 2}}`(result)'"
   wait: true
-
   command: "-e=http://{{.QueryNodePort}}  -u={{.RestUsername}} -p={{.RestPassword}} -script='create index o3_rating on `{{.NthBucket 3}}`(rating)'"
-
   command: "-e=http://{{.QueryNodePort}}  -u={{.RestUsername}} -p={{.RestPassword}} -script='create index o3_claims on `{{.NthBucket 3}}`(claim)'"
-
   command: "-e=http://{{.QueryNodePort}}  -u={{.RestUsername}} -p={{.RestPassword}} -script='create index o3_result on `{{.NthBucket 3}}`(result)'"
   wait: true


###############  query index ################
-
  # run http attacks against view with various skip param
  template: attack_query
  args: "{{.QueryNodePort}}, 0, {{.Scale 10}},'select * from default where rating > 0  limit 50'"
-
  args: "{{.QueryNodePort}}, 0, {{.Scale 10}},'select * from `{{.NthBucket 1}}` where rating > 100  limit 50'"
-
  args: "{{.QueryNodePort}}, 0, {{.Scale 10}},'select SUM\\(rating) from `{{.NthBucket 2}}` where result = SUCCESS limit 50'"
-
  args: "{{.QueryNodePort}}, 0, {{.Scale 10}},'select SUM\\(rating) from `{{.NthBucket 3}}` where claim like A% limit 20'"
-
  args: "{{.QueryNodePort}}, 0, {{.Scale 10}},'delete from default where rating < 300'"
-
  args: "{{.QueryNodePort}}, 0, {{.Scale 10}},'delete from default where rating > 700'"
-
  args: "{{.QueryNodePort}}, 0, {{.Scale 10}},'delete from default where rating > 300 and rating < 700'"


# ###############  swap indexer ################
- template: rebalance_swap
  args: "{{.InActiveNode}}, {{.IndexNode}}, (index,data)"
  alias: SwapRebId


###############  drop indexes during rebalance ################
-
   image: sequoiatools/cbq
   command: "-e=http://{{.QueryNodePort}}  -u={{.RestUsername}} -p={{.RestPassword}} -script='drop index `{{.Bucket}}`'"
-
   command: "-e=http://{{.QueryNodePort}}  -u={{.RestUsername}} -p={{.RestPassword}} -script='drop index `{{.NthBucket 1}}`.o1_rating'"
-
   command: "-e=http://{{.QueryNodePort}}  -u={{.RestUsername}} -p={{.RestPassword}} -script='drop index `{{.NthBucket 2}}`.o2_rating'"
-
   command: "-e=http://{{.QueryNodePort}}  -u={{.RestUsername}} -p={{.RestPassword}} -script='drop index `{{.NthBucket 3}}`.o3_rating'"



###############  'when' swap rebalance is done add back some and drop others ################
-  
   before: "{{.Status `SwapRebId` | eq `exited`}}"
   image: sequoiatools/cbq
   wait: true
   command: "-e=http://{{.QueryNodePort}}  -u={{.RestUsername}} -p={{.RestPassword}} -script='create primary index on `{{.Bucket}}`'"
-
   command: "-e=http://{{.QueryNodePort}}  -u={{.RestUsername}} -p={{.RestPassword}} -script='create index o3_rating on `{{.NthBucket 3}}`(rating)'"
-
   command: "-e=http://{{.QueryNodePort}}  -u={{.RestUsername}} -p={{.RestPassword}} -script='drop index `{{.NthBucket 2}}`.o2_claims'"
-
   command: "-e=http://{{.QueryNodePort}}  -u={{.RestUsername}} -p={{.RestPassword}} -script='drop index `{{.NthBucket 3}}`.o3_claims'"




###############  swap hard-failover(orchestrator.index) ################
- template: failover_node_forced
  args: "{{.IndexNode}}"
  wait: true
- template: rebalance_in
  args: "{{.InActiveNode}}, (index, data)"
  alias: SwapFailId


###############  'when' hard failover is done add back all indexes ################
-
   image: sequoiatools/cbq
   command: "-e=http://{{.QueryNodePort}}  -u={{.RestUsername}} -p={{.RestPassword}} -script='create index default_rating on `{{.Bucket}}`(rating)'"
-
   command: "-e=http://{{.QueryNodePort}}  -u={{.RestUsername}} -p={{.RestPassword}} -script='create index default_claims on `{{.Bucket}}`(claim)'"
-
   command: "-e=http://{{.QueryNodePort}}  -u={{.RestUsername}} -p={{.RestPassword}} -script='create index default_result on `{{.Bucket}}`(result)'"
   wait: true
-
   command: "-e=http://{{.QueryNodePort}}  -u={{.RestUsername}} -p={{.RestPassword}} -script='create primary index on `{{.Bucket}}`'"
-
   command: "-e=http://{{.QueryNodePort}}  -u={{.RestUsername}} -p={{.RestPassword}} -script='create index o1_rating on `{{.NthBucket 1}}`(rating)'"
   wait: true
-
   command: "-e=http://{{.QueryNodePort}}  -u={{.RestUsername}} -p={{.RestPassword}} -script='create index o1_claims on `{{.NthBucket 1}}`(claim)'"
-
   command: "-e=http://{{.QueryNodePort}}  -u={{.RestUsername}} -p={{.RestPassword}} -script='create index o1_result on `{{.NthBucket 1}}`(result)'"
-
   command: "-e=http://{{.QueryNodePort}}  -u={{.RestUsername}} -p={{.RestPassword}} -script='create index o2_rating on `{{.NthBucket 2}}`(rating)'"
-
   command: "-e=http://{{.QueryNodePort}}  -u={{.RestUsername}} -p={{.RestPassword}} -script='create index o2_claims on `{{.NthBucket 2}}`(claim)'"
-
   command: "-e=http://{{.QueryNodePort}}  -u={{.RestUsername}} -p={{.RestPassword}} -script='create index o2_result on `{{.NthBucket 2}}`(result)'"
   wait: true
-
   command: "-e=http://{{.QueryNodePort}}  -u={{.RestUsername}} -p={{.RestPassword}} -script='create index o3_rating on `{{.NthBucket 3}}`(rating)'"
-
   command: "-e=http://{{.QueryNodePort}}  -u={{.RestUsername}} -p={{.RestPassword}} -script='create index o3_claims on `{{.NthBucket 3}}`(claim)'"
-
   command: "-e=http://{{.QueryNodePort}}  -u={{.RestUsername}} -p={{.RestPassword}} -script='create index o3_result on `{{.NthBucket 3}}`(result)'"
   wait: true



############### data loading for some time ################
- template: pillowfight
  args: "{{.Orchestrator}}, {{.Bucket}}, -M 512 -I {{.Scale 2000}} -B {{.Scale 200}} -t 4  --rate-limit {{.Scale 2000}}, {{.AuthPassword}}"
  duration: 600  # 10 min data loading
  wait: true

######  failover recently added index nodes  ######
- before: "{{.Status `SwapFailId` | eq `exited`}}"
  template: failover_node
  args: "{{.LastIndexNode}}"
  wait: true
- template: rebalance_in
  args: "{{.IndexNode}}"
  wait: true


# #### add back index nodes ####
- template: add_node
  args: "{{.InActiveNode}}, index"
- args: "{{.InActiveNode}}, index"

- template: rebalance
  wait: true
